/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WhatRouteImport } from './routes/what'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RRoomIdRouteImport } from './routes/r/$roomId'
import { Route as GameRoomIdRouteImport } from './routes/game/$roomId'
import { Route as ApiSplatRouteImport } from './routes/api/$'
import { Route as GameRpsIndexRouteImport } from './routes/game/rps/index'
import { Route as GameTestRoomIdRouteImport } from './routes/game/test/$roomId'

const WhatRoute = WhatRouteImport.update({
  id: '/what',
  path: '/what',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RRoomIdRoute = RRoomIdRouteImport.update({
  id: '/r/$roomId',
  path: '/r/$roomId',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRoomIdRoute = GameRoomIdRouteImport.update({
  id: '/game/$roomId',
  path: '/game/$roomId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRpsIndexRoute = GameRpsIndexRouteImport.update({
  id: '/game/rps/',
  path: '/game/rps/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameTestRoomIdRoute = GameTestRoomIdRouteImport.update({
  id: '/game/test/$roomId',
  path: '/game/test/$roomId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/what': typeof WhatRoute
  '/api/$': typeof ApiSplatRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/r/$roomId': typeof RRoomIdRoute
  '/game/test/$roomId': typeof GameTestRoomIdRoute
  '/game/rps': typeof GameRpsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/what': typeof WhatRoute
  '/api/$': typeof ApiSplatRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/r/$roomId': typeof RRoomIdRoute
  '/game/test/$roomId': typeof GameTestRoomIdRoute
  '/game/rps': typeof GameRpsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/what': typeof WhatRoute
  '/api/$': typeof ApiSplatRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/r/$roomId': typeof RRoomIdRoute
  '/game/test/$roomId': typeof GameTestRoomIdRoute
  '/game/rps/': typeof GameRpsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/what'
    | '/api/$'
    | '/game/$roomId'
    | '/r/$roomId'
    | '/game/test/$roomId'
    | '/game/rps'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/what'
    | '/api/$'
    | '/game/$roomId'
    | '/r/$roomId'
    | '/game/test/$roomId'
    | '/game/rps'
  id:
    | '__root__'
    | '/'
    | '/what'
    | '/api/$'
    | '/game/$roomId'
    | '/r/$roomId'
    | '/game/test/$roomId'
    | '/game/rps/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WhatRoute: typeof WhatRoute
  ApiSplatRoute: typeof ApiSplatRoute
  GameRoomIdRoute: typeof GameRoomIdRoute
  RRoomIdRoute: typeof RRoomIdRoute
  GameTestRoomIdRoute: typeof GameTestRoomIdRoute
  GameRpsIndexRoute: typeof GameRpsIndexRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/what': {
      id: '/what'
      path: '/what'
      fullPath: '/what'
      preLoaderRoute: typeof WhatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/r/$roomId': {
      id: '/r/$roomId'
      path: '/r/$roomId'
      fullPath: '/r/$roomId'
      preLoaderRoute: typeof RRoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$roomId': {
      id: '/game/$roomId'
      path: '/game/$roomId'
      fullPath: '/game/$roomId'
      preLoaderRoute: typeof GameRoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/rps/': {
      id: '/game/rps/'
      path: '/game/rps'
      fullPath: '/game/rps'
      preLoaderRoute: typeof GameRpsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/test/$roomId': {
      id: '/game/test/$roomId'
      path: '/game/test/$roomId'
      fullPath: '/game/test/$roomId'
      preLoaderRoute: typeof GameTestRoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WhatRoute: WhatRoute,
  ApiSplatRoute: ApiSplatRoute,
  GameRoomIdRoute: GameRoomIdRoute,
  RRoomIdRoute: RRoomIdRoute,
  GameTestRoomIdRoute: GameTestRoomIdRoute,
  GameRpsIndexRoute: GameRpsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
